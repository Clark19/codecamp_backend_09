# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  name: String!
}

type Payment {
  id: String!
  impUid: String!
  amount: Int!
  status: PAYMENT_STATUS_ENUM!
  user: User!
  createdAt: String!
}

enum PAYMENT_STATUS_ENUM {
  READY
  PAID
  CANCELLED
  FAILED
}

type YoutubeInfo {
  id: String!
  title: String!
  url: String!
  subtitlesEn: String
  subtitlesKo: String
  subtitlesWithTime: JSON
  category: Category
  users: [User!]
  isEditable: Boolean
  updatedAt: Float
  DeleteDate: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  email: String!
  nickName: String
  profileImageUrl: String!
  phone: String
  payments: [Payment!]
  youtubeInfos: [YoutubeInfo!]
  DeleteDate: DateTime
  point: Int
}

type UserSubtitles {
  id: String!
  youtubeInfo: YoutubeInfo!
  subtitlesEn: String
}

type Query {
  fetchBoards: String!
  fetchYoutubeInfos(search: String = ""): [YoutubeInfo!]!
  fetchYoutubeInfosWithDeleted: [YoutubeInfo!]!
  fetchYoutubeInfo(youtubeInfoId: String!): YoutubeInfo!
  fetchUsers: [User!]!
  fetchUsersWithDeleted: [User!]!
  fetchLoginUser: User!
  fetchUserSubtitles: [UserSubtitles!]!
  fetchUserSubtitle(userSubtitleId: String!): UserSubtitles!
}

type Mutation {
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createBoard(createBoardInput: CreateBoardInput): String!
  uploadFile(files: [Upload!]!): [String!]!
  createPayment(impUid: String!, amount: Int!): Payment!
  cancelPayment(impUid: String!, amount: Int): Payment!
  createYoutubeInfo(createYoutubeInfoInput: CreateYoutubeInfoInput!): YoutubeInfo!
  updateYoutubeInfo(youtubeInfoId: String!, updateYoutubeInfoInput: UpdateYoutubeInfoInput!): YoutubeInfo!
  deleteYoutubeInfo(youtubeInfoId: String!): Boolean!
  restoreYoutubeInfo(youtubeInfoId: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(userId: String!, updateUserInput: UpdateUserInput!): User!
  updateUserPwd(userId: String!, password: String!): User!
  deleteUser(userId: String!): Boolean!
  deleteLoginUser(userId: String!): Boolean!
  restoreUser(userId: String!): Boolean!
  createUserSubtitles(createUserSubtitleInput: CreateUserSubtitlesInput!): UserSubtitles!
  updateUserSubtitles(userSubtitlesId: String!, updateUserSubtitlesInput: UpdateUserSubtitlesInput!): UserSubtitles!
}

input CreateBoardInput {
  writer: String!
  title: String!
  contents: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateYoutubeInfoInput {
  title: String!
  url: String!
  subtitlesEn: String
  subtitlesKo: String
  subtitlesWithTime: JSON
  categoryId: String
  userId: String
}

input UpdateYoutubeInfoInput {
  title: String
  url: String
  subtitlesEn: String
  subtitlesKo: String
  subtitlesWithTime: JSON
  categoryId: String
  userId: String
}

input CreateUserInput {
  email: String!
  nickName: String
  password: String!
  phone: String
}

input UpdateUserInput {
  email: String
  nickName: String
  password: String
  phone: String
}

input CreateUserSubtitlesInput {
  youtubeInfoId: String!
  subtitlesEn: String
  subtitlesKo: String
  subtitlesWithTime: JSON
  imgUrls: [String!]
}

input UpdateUserSubtitlesInput {
  youtubeInfoId: String
  subtitlesEn: String
  subtitlesKo: String
  subtitlesWithTime: JSON
  imgUrls: [String!]
}