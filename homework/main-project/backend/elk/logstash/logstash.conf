# logstash에서는 대소문자를 구분하지 않기 때문에 모두 소문자로 작성
input{
  jdbc {
    ##### 1단계 ##### => 매번 똑같은 데이터를 계속 가지고옴
    # jdbc_driver_library : 다운로드 받은 jdbc 드라이버 파일 경로
    # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker09"
    # jdbc_user => "root"
    # jdbc_password => "root"
    # schedule => "* * * * *"
    # statement => "select * from product"

    ##### 2단계 ##### 시간의 소수점이 짤리는 문제 발생(정확한 비교 불가)
    # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker09"
    # jdbc_user => "root"
    # jdbc_password => "root"
    # schedule => "* * * * *"
    # use_column_value => "true"
    # tracking_column => "updatedat"
    # tracking_column_type => "timestamp"
    # last_run_metadata_path => "./aaa.txt"
    # statement => "select id, name, description, price, updatedat from product where updatedat > :sql_last_value order by updatedat asc"

    ##### 3단계 ##### 시간의 소수점이 짤리는 문제 발생(정확한 비교 불가)
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker09"
    jdbc_user => "root"
    jdbc_password => "root"
    schedule => "* * * * *"
    use_column_value => "true"
    tracking_column => "updatedat"
    tracking_column_type => "numeric"
    last_run_metadata_path => "./aaa.txt"
    # statement => "select id, name, description, price, unix_timestamp(updatedat) as updatedat from product where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
    statement => "select id, title, url, subtitlesen, subtitlesko, subtitleswithtime, categoryid, iseditable, unix_timestamp(updatedat) as updatedat 
      from youtube_info 
      where unix_timestamp(updatedat) > :sql_last_value 
      order by updatedat asc"
  }
}

output{
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "myyoutubeinfo"
  }
}