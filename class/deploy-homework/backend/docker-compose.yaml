version: '3.7'

# 가상 컴퓨터들
services:
  my-backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/codecamp/src
      # - ./*.js:/codecamp/*.js
      # - ./src:/codecamp/src
      # - .:/codecamp  비추천한다고 하셨음. 이 방식으로 하면 .dockerignore에 node_modules 제외 시켜도
      #  무시되고 로컬에 있는 node_modules를 도커가 공유해 이상하게 작동하거나 에러 남.
      # package.json 이 바뀌면 그땐 빌드를 새로 다시 해야함.
      # 그리고 docker-compose.yaml 파일이 바뀐건 발드 다시 할 필요  없음.
      # Dockerfile  바뀌면 빌드해야 함.
      # 도커 바깥에서 vscode로 소스코드 수정한게 도커 안의 파일에도 적용되려면
      #  volumes랑 nodemon 같이 설정 되있어야 함.

    ports:
      - 3000:3000
    depends_on:
      - my-database
    env_file:
      - ./.env.docker

  my-database:
    # platform: linux/x86_64 # 이거 m1 맥북용이하고 함.
    image: mysql:latest
    # 변경 없이 빌드만 하면 도커파일 불필요
    restart: always
    environment:
      MYSQL_DATABASE: 'mydocker09'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - 3306:3306

  my-redis:
    image: redis:latest
    ports:
      - 6379:6379

  # ELK 각각이 내부 설정이 elasticsearch, logstash, logstash 라는 이름으로 연결되어있어서(name resolution)
  # 설정 다 찾아 바꿔야 하므로 기본으름으로 하는게 좋다
  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      discovery.type: single-node
    ports:
      - 9200:9200

  logstash:
    image: logstash:7.17.0
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk/logstash/mysql-connector-java-8.0.28.jar:/usr/share/logstash/mysql-connector-java-8.0.28.jar

  # // 필수가 아니므로 시연을 위해 임시 사용
  kibana:
    image: kibana:7.17.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOST: http://elasticsearch:9200
    ports:
      - 5601:5601
